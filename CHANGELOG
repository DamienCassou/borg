# -*- mode: org -*-

* v2.1.0    UNRELEASED

- The values of ~submodule.DRONE.no-byte-compile~ are now treated as
  relative to the top-level.  The documentation already claimed that
  was the case before.

- All build output is appened to the same buffer now.  Previously each
  build created a new, unspecialized buffer that never got cleaned up.
  The buffer is automatically shown on every build but can easily be
  burried using ~C-q~.

* v2.0.0    2017/09/19

- Added new command ~borg-clone~ to make it easier to review a package
  before assimilating it.  Assimilating a package gives that package
  a change to run arbitrary code, so the review should happen first.

  Packages that have been cloned are now being referred to as clones.
  If they have additionally been assimilated, then they are referred
  to as drones, as before.  Note that drones are also clones.

  When a package has not even been cloned yet, then it is referred
  to as just a package.

- Added new command ~borg-remove~ to replace ~borg-uninstall~.  The new
  name is more appropriate because this command is also suitable for
  removing a package that has previously been cloned, without also
  being assimilated.  This command moves the working tree to the
  trash, but does not remove the gitdir.  It also refuses to do
  anything if the working tree isn't clean.

- Command ~borg-assimilate~ now assimilates an already cloned package
  without the user having to use a prefix argument, while separating
  the gitdir from the working tree, if that isn't already the case.
  The latter is useful after the user initialized a new repository,
  or cloned a package using something other than ~borg-clone~.

  When assimilating a package, that has been cloned or assimilated
  before but was then removed again, then the user is now given the
  choice between reusing the existing gitdir or starting over.

- Command ~borg-build~ now also activates the clone or drone using the
  new command ~borg-activate~, which was extracted from ~borg-assimilate~.

- Command ~borg-build~ now always uses a non-interactive Emacs instance
  to avoid polluting the new byte-code with old versions of the same
  code that is already loaded.

- The functions ~borg-update-autoloads~, ~borg-byte-compile~, and
  ~borg-makeinfo~ can now be used as explicit build steps without
  having to specify their argument(s).

- Added new variable ~borg-build-shell-command~ to give users complete
  control over how shell command build steps are executed.

- Added new utility function ~borg-gitdir~ and, in order to avoid
  confusion and match Git terminology, renamed ~borg-repository~ to
  ~borg-worktree~.

- Added new utility functions ~borg-read-package~, ~borg-read-clone~,
  and ~borg-clones~.

- Fixed a type error in ~borg-initialized~ when drones are being
  skipped.

* v1.0.0    2016/12/31

- Repository moved to https://github.com/emacscollective/borg.

- The ~~/.emacs.d/bin/borg-bootstrap~ script can now add additional
  remotes.  That script is part of the repository of the ~emacs.g~
  collective.  It cannot be part of the ~borg~ repository, because it
  is has to be available before the ~borg~ repository and all the other
  drone/submodule repositories are cloned.  But the documentation
  about this script can be found in the ~borg~ manual.

- ~borg-initialize~ now uses a cache to avoid calling ~git config~
  excessively.  On Windows this significantly improves performance.

- ~borg-drones~ learned to optionally return drone variables instead
  of just the drone names.

- ~borg-byte-compile~ and ~borg-update-autoloads~ now don't require the
  PATH argument.

- ~borg-uninstall~ was broken.

- The manual was updated heavily.

- Cosmetic and other minor improvements.

- Minor bug fixes and typo fixes.

* v0.2.0    2016/11/05

- Repository moved to https://gitlab.com/emacscollective/borg.

- Updated manual and made source compatible with Org v9.0.

- Improved and extended ~make~ targets.

* v0.1.6    2016/10/08

- Updated homepage link.

* v0.1.5    2016/09/27

- Typo fixes.

* v0.1.4    2016/09/27

- When invoked as a command ~borg-build~ failed.

* v0.1.3    2016/09/01

- Added new function ~borg-batch-rebuild-init~ to allow compiling
  just the init files without also compiling all drones.

* v0.1.2    2016/08/27

- ~borg-batch-rebuild~ now also compiles the secondary init file
  ~<user-real-login-name>.el~ if present.

- ~borg-batch-rebuild~ now compiles ~org~ before all other packages.

* v0.1.1    2016/05/18

- ~borg-build~ did not respect ~submodule.<name>.build-step~.

* v0.1.0    2016/05/17

- First release.
